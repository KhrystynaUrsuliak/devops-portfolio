
!.env.example
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions
#   Abstra is an AI-powered process automation framework.
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   For a library or package, you might want to ignore these files since the code is
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   Ignore directories containing user credentials, local state, and settings.
#   JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#   Learn more at https://abstra.io/docs
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   Usually these files are written by a python script from a template
#   Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#   and can be added to the global gitignore or merged into this file.  For a more nuclear
#   and can be added to the global gitignore or merged into this file. However, if you prefer, 
#   be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#   before PyInstaller builds the exe, so as to inject date/other infos into it.
#   commonly ignored for libraries.
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#   in the .venv directory. It is recommended not to include this directory in version control.
#   install all needed dependencies.
#   intended to run in multiple environments; otherwise, check them in:
#   option (not recommended) you can uncomment the following to ignore the entire idea folder.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#   you could uncomment the following to ignore the entire vscode folder
# .idea/
# .python-version
# .vscode/
# Abstra
# ActiveMQ
# Bower dependency directory (https://bower.io/)
# Byte-compiled / optimized / DLL files
# C extensions
# Celery stuff
# Comment in the public line in if your project uses Gatsby and not Next.js
# Compiled binary addons (https://nodejs.org/api/addons.html)
# Coverage directory used by tools like istanbul
# Cython debug symbols
# Dependency directories
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
# Distribution / packaging
# Django stuff:
# Docusaurus cache and generated files
# DynamoDB Local files
# Environments
# Firebase cache directory
# Flask stuff:
# FuseBox cache
# Gatsby files
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
# IPython
# Installer logs
# Jupyter Notebook
# Logs
# Marimo
# Next.js build output
# Nuxt.js build / generate output
# Optional REPL history
# Optional eslint cache
# Optional npm cache directory
# Optional stylelint cache
# Output of 'npm pack'
# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
# Pipfile.lock
# PyBuilder
# PyCharm
# PyInstaller
# PyPI configuration file
# Pyre type checker
# RabbitMQ
# Redis
# Rope project settings
# Ruff stuff:
# Runtime data
# SageMath parsed files
# Scrapy stuff:
# Serverless directories
# Snowpack dependency directory (https://snowpack.dev/)
# Sphinx documentation
# Spyder project settings
# Stores VSCode versions used for testing VSCode extensions
# Streamlit
# Sveltekit cache directory
# TernJS port file
# Translations
# TypeScript cache
# UV
# Unit test / coverage reports
# Visual Studio Code
# Vite files
# Yarn Integrity file
# dotenv environment variable files
# https://nextjs.org/blog/next-9-1#public-directory-support
# mkdocs documentation
# mypy
# node-waf configuration
# nyc test coverage
# parcel-bundler cache (https://parceljs.org/)
# pdm
# pdm.lock
# pdm.toml
# pipenv
# pixi
# pixi.lock
# poetry
# poetry.lock
# poetry.toml
# public
# pyenv
# pytype static type analyzer
# uv.lock
# vitepress build output
# vitepress cache directory
# vuepress build output
# vuepress v2.x temp and cache directory
# yarn v3
*$py.class
**/.vitepress/cache
**/.vitepress/dist
*.aof
*.cover
*.egg
*.egg-info/
*.lcov
*.log
*.manifest
*.mo
*.pid
*.pid.lock
*.pot
*.py.cover
*.py[codz]
*.rdb
*.sage.py
*.seed
*.so
*.spec
*.tgz
*.tsbuildinfo
.Python
.abstra/
.cache
.cache/
.coverage
.coverage.*
.dmypy.json
.docusaurus
.dynamodb/
.eggs/
.env
.env.*
.envrc
.eslintcache
.firebase/
.fusebox/
.grunt
.hypothesis/
.installed.cfg
.ipynb_checkpoints
.lock-wscript
.mypy_cache/
.next
.node_repl_history
.nox/
.npm
.nuxt
.nyc_output
.output
.parcel-cache
.pdm-build/
.pdm-python
.pixi
.pnp.*
.pybuilder/
.pypirc
.pyre/
.pytest_cache/
.pytype/
.ropeproject
.ruff_cache/
.scrapy
.serverless/
.spyderproject
.spyproject
.streamlit/secrets.toml
.stylelintcache
.svelte-kit/
.temp
.tern-port
.tox/
.venv
.vite/
.vscode-test
.vuepress/dist
.webassets-cache
.yarn-integrity
.yarn/*
/site
404: Not Found
ENV/
MANIFEST
__marimo__/
__pycache__/
__pypackages__/
activemq-data/
bower_components
build/
build/Release
celerybeat-schedule
celerybeat.pid
cover/
coverage
coverage.xml
cython_debug/
db.sqlite3
db.sqlite3-journal
develop-eggs/
dist
dist/
dmypy.json
docs/_build/
downloads/
eggs/
env.bak/
env/
htmlcov/
instance/
ipython_config.py
jspm_packages/
lerna-debug.log*
lib-cov
lib/
lib64/
local_settings.py
logs
marimo/_lsp/
marimo/_static/
mnesia/
node_modules/
nosetests.xml
npm-debug.log*
out
parts/
pids
pip-delete-this-directory.txt
pip-log.txt
profile_default/
rabbitmq-data/
rabbitmq/
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
sdist/
share/python-wheels/
target/
var/
venv.bak/
venv/
vite.config.js.timestamp-*
vite.config.ts.timestamp-*
web_modules/
wheels/
yarn-debug.log*
yarn-error.log*

# System files
.DS_Store
Thumbs.db
